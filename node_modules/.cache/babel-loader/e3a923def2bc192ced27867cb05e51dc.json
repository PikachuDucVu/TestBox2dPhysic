{"ast":null,"code":"import { b2World } from \"box2d.ts\";\nimport { World } from \"flat-ecs\";\nimport { PolygonBatch } from \"gdxts\";\nexport const createGameScreen = async (assetManager, viewport) => {\n  const gl = viewport.getContext();\n  const camera = viewport.getCamera();\n  const batch = new PolygonBatch(gl);\n  camera.setYDown(true);\n  batch.setYDown(true);\n  gl.clearColor(0, 0, 0, 1);\n  const world = new World();\n  const physicWorld = new b2World({\n    x: 0,\n    y: 10\n  });\n  return {\n    update(delta) {\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      batch.setProjection(camera.combined);\n      world.setDelta(delta);\n      world.processActiveSystem();\n      world.processPassiveSystem();\n      physicWorld.Step(delta, 8, 3);\n    },\n\n    dispose() {}\n\n  };\n};","map":{"version":3,"names":["b2World","World","PolygonBatch","createGameScreen","assetManager","viewport","gl","getContext","camera","getCamera","batch","setYDown","clearColor","world","physicWorld","x","y","update","delta","clear","COLOR_BUFFER_BIT","setProjection","combined","setDelta","processActiveSystem","processPassiveSystem","Step","dispose"],"sources":["D:/projects/test-game/src/GameScreen/GameScreen.ts"],"sourcesContent":["import { b2AABB, b2World } from \"box2d.ts\";\r\nimport { World } from \"flat-ecs\";\r\nimport { AssetManager, PolygonBatch, Screen, Viewport } from \"gdxts\";\r\n\r\nexport const createGameScreen = async (\r\n  assetManager: AssetManager,\r\n  viewport: Viewport\r\n): Promise<Screen> => {\r\n  const gl = viewport.getContext();\r\n  const camera = viewport.getCamera();\r\n  const batch = new PolygonBatch(gl);\r\n  camera.setYDown(true);\r\n  batch.setYDown(true);\r\n  gl.clearColor(0, 0, 0, 1);\r\n\r\n  const world = new World();\r\n  const physicWorld = new b2World({\r\n    x: 0,\r\n    y: 10,\r\n  });\r\n\r\n  return {\r\n    update(delta: number) {\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n      batch.setProjection(camera.combined);\r\n      world.setDelta(delta);\r\n      world.processActiveSystem();\r\n      world.processPassiveSystem();\r\n      physicWorld.Step(delta, 8, 3);\r\n    },\r\n    dispose(): void {},\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAAiBA,OAAjB,QAAgC,UAAhC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAAuBC,YAAvB,QAA6D,OAA7D;AAEA,OAAO,MAAMC,gBAAgB,GAAG,OAC9BC,YAD8B,EAE9BC,QAF8B,KAGV;EACpB,MAAMC,EAAE,GAAGD,QAAQ,CAACE,UAAT,EAAX;EACA,MAAMC,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;EACA,MAAMC,KAAK,GAAG,IAAIR,YAAJ,CAAiBI,EAAjB,CAAd;EACAE,MAAM,CAACG,QAAP,CAAgB,IAAhB;EACAD,KAAK,CAACC,QAAN,CAAe,IAAf;EACAL,EAAE,CAACM,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;EAEA,MAAMC,KAAK,GAAG,IAAIZ,KAAJ,EAAd;EACA,MAAMa,WAAW,GAAG,IAAId,OAAJ,CAAY;IAC9Be,CAAC,EAAE,CAD2B;IAE9BC,CAAC,EAAE;EAF2B,CAAZ,CAApB;EAKA,OAAO;IACLC,MAAM,CAACC,KAAD,EAAgB;MACpBZ,EAAE,CAACa,KAAH,CAASb,EAAE,CAACc,gBAAZ;MACAV,KAAK,CAACW,aAAN,CAAoBb,MAAM,CAACc,QAA3B;MACAT,KAAK,CAACU,QAAN,CAAeL,KAAf;MACAL,KAAK,CAACW,mBAAN;MACAX,KAAK,CAACY,oBAAN;MACAX,WAAW,CAACY,IAAZ,CAAiBR,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B;IACD,CARI;;IASLS,OAAO,GAAS,CAAE;;EATb,CAAP;AAWD,CA5BM"},"metadata":{},"sourceType":"module"}