{"ast":null,"code":"import { b2BodyDef, b2BodyType, b2CircleShape, b2FixtureDef } from \"box2d.ts\";\nimport { Constants } from \"../Constants\";\nexport const createBall = (world, x, y, radius, userData) => {\n  const bodyDef = new b2BodyDef();\n  bodyDef.type = b2BodyType.b2_staticBody;\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\n  const circle = new b2CircleShape();\n  circle.m_radius = radius;\n  const fixtureDef = new b2FixtureDef();\n  fixtureDef.shape = circle;\n  fixtureDef.restitution = 0.5; // bounce bird\n\n  fixtureDef.friction = 1;\n  fixtureDef.shape = circle;\n  fixtureDef.filter.categoryBits = Constants.BIRD_CATEGORY_BIT;\n  fixtureDef.filter.maskBits = Constants.BIRD_MASK_BIT;\n  const body = world.CreateBody(bodyDef);\n  body.CreateFixture(fixtureDef);\n  body.SetUserData(userData);\n  return body;\n};\nexport const createCloneBird = (world, x, y, radius, userData) => {\n  const bodyDef = new b2BodyDef();\n  bodyDef.type = b2BodyType.b2_dynamicBody;\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\n  const circle = new b2CircleShape();\n  circle.m_radius = radius;\n  const fixtureDef = new b2FixtureDef();\n  fixtureDef.shape = circle;\n  fixtureDef.restitution = 0.5; // bounce bird\n\n  fixtureDef.friction = 1;\n  fixtureDef.shape = circle;\n  fixtureDef.filter.categoryBits = Constants.BIRD_CATEGORY_BIT;\n  fixtureDef.filter.maskBits = Constants.BIRD_MASK_BIT;\n  const body = world.CreateBody(bodyDef);\n  body.CreateFixture(fixtureDef);\n  body.SetUserData(userData);\n  return body;\n};","map":{"version":3,"names":["b2BodyDef","b2BodyType","b2CircleShape","b2FixtureDef","Constants","createBall","world","x","y","radius","userData","bodyDef","type","b2_staticBody","position","Set","circle","m_radius","fixtureDef","shape","restitution","friction","filter","categoryBits","BIRD_CATEGORY_BIT","maskBits","BIRD_MASK_BIT","body","CreateBody","CreateFixture","SetUserData","createCloneBird","b2_dynamicBody"],"sources":["D:/projects/test-game/src/utils/gameUtil.ts"],"sourcesContent":["import {\r\n  b2Body,\r\n  b2BodyDef,\r\n  b2BodyType,\r\n  b2CircleShape,\r\n  b2FixtureDef,\r\n  b2World,\r\n} from \"box2d.ts\";\r\nimport { Constants } from \"../Constants\";\r\n\r\nexport const createBall = (\r\n  world: b2World,\r\n  x: number,\r\n  y: number,\r\n  radius: number,\r\n  userData: string\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\r\n  const circle = new b2CircleShape();\r\n  circle.m_radius = radius;\r\n  const fixtureDef = new b2FixtureDef();\r\n  fixtureDef.shape = circle;\r\n  fixtureDef.restitution = 0.5; // bounce bird\r\n  fixtureDef.friction = 1;\r\n  fixtureDef.shape = circle;\r\n\r\n  fixtureDef.filter.categoryBits = Constants.BIRD_CATEGORY_BIT;\r\n  fixtureDef.filter.maskBits = Constants.BIRD_MASK_BIT;\r\n\r\n  const body = world.CreateBody(bodyDef);\r\n  body.CreateFixture(fixtureDef);\r\n  body.SetUserData(userData);\r\n  return body;\r\n};\r\n\r\nexport const createCloneBird = (\r\n  world: b2World,\r\n  x: number,\r\n  y: number,\r\n  radius: number,\r\n  userData: string\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_dynamicBody;\r\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\r\n  const circle = new b2CircleShape();\r\n  circle.m_radius = radius;\r\n  const fixtureDef = new b2FixtureDef();\r\n  fixtureDef.shape = circle;\r\n  fixtureDef.restitution = 0.5; // bounce bird\r\n  fixtureDef.friction = 1;\r\n  fixtureDef.shape = circle;\r\n\r\n  fixtureDef.filter.categoryBits = Constants.BIRD_CATEGORY_BIT;\r\n  fixtureDef.filter.maskBits = Constants.BIRD_MASK_BIT;\r\n\r\n  const body = world.CreateBody(bodyDef);\r\n  body.CreateFixture(fixtureDef);\r\n  body.SetUserData(userData);\r\n  return body;\r\n};\r\n"],"mappings":"AAAA,SAEEA,SAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,YALF,QAOO,UAPP;AAQA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,CACxBC,KADwB,EAExBC,CAFwB,EAGxBC,CAHwB,EAIxBC,MAJwB,EAKxBC,QALwB,KAMb;EACX,MAAMC,OAAO,GAAG,IAAIX,SAAJ,EAAhB;EACAW,OAAO,CAACC,IAAR,GAAeX,UAAU,CAACY,aAA1B;EACAF,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqBR,CAAC,GAAGE,MAAM,GAAG,CAAlC,EAAqCD,CAAC,GAAGC,MAAM,GAAG,CAAlD;EACA,MAAMO,MAAM,GAAG,IAAId,aAAJ,EAAf;EACAc,MAAM,CAACC,QAAP,GAAkBR,MAAlB;EACA,MAAMS,UAAU,GAAG,IAAIf,YAAJ,EAAnB;EACAe,UAAU,CAACC,KAAX,GAAmBH,MAAnB;EACAE,UAAU,CAACE,WAAX,GAAyB,GAAzB,CARW,CAQmB;;EAC9BF,UAAU,CAACG,QAAX,GAAsB,CAAtB;EACAH,UAAU,CAACC,KAAX,GAAmBH,MAAnB;EAEAE,UAAU,CAACI,MAAX,CAAkBC,YAAlB,GAAiCnB,SAAS,CAACoB,iBAA3C;EACAN,UAAU,CAACI,MAAX,CAAkBG,QAAlB,GAA6BrB,SAAS,CAACsB,aAAvC;EAEA,MAAMC,IAAI,GAAGrB,KAAK,CAACsB,UAAN,CAAiBjB,OAAjB,CAAb;EACAgB,IAAI,CAACE,aAAL,CAAmBX,UAAnB;EACAS,IAAI,CAACG,WAAL,CAAiBpB,QAAjB;EACA,OAAOiB,IAAP;AACD,CAzBM;AA2BP,OAAO,MAAMI,eAAe,GAAG,CAC7BzB,KAD6B,EAE7BC,CAF6B,EAG7BC,CAH6B,EAI7BC,MAJ6B,EAK7BC,QAL6B,KAMlB;EACX,MAAMC,OAAO,GAAG,IAAIX,SAAJ,EAAhB;EACAW,OAAO,CAACC,IAAR,GAAeX,UAAU,CAAC+B,cAA1B;EACArB,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqBR,CAAC,GAAGE,MAAM,GAAG,CAAlC,EAAqCD,CAAC,GAAGC,MAAM,GAAG,CAAlD;EACA,MAAMO,MAAM,GAAG,IAAId,aAAJ,EAAf;EACAc,MAAM,CAACC,QAAP,GAAkBR,MAAlB;EACA,MAAMS,UAAU,GAAG,IAAIf,YAAJ,EAAnB;EACAe,UAAU,CAACC,KAAX,GAAmBH,MAAnB;EACAE,UAAU,CAACE,WAAX,GAAyB,GAAzB,CARW,CAQmB;;EAC9BF,UAAU,CAACG,QAAX,GAAsB,CAAtB;EACAH,UAAU,CAACC,KAAX,GAAmBH,MAAnB;EAEAE,UAAU,CAACI,MAAX,CAAkBC,YAAlB,GAAiCnB,SAAS,CAACoB,iBAA3C;EACAN,UAAU,CAACI,MAAX,CAAkBG,QAAlB,GAA6BrB,SAAS,CAACsB,aAAvC;EAEA,MAAMC,IAAI,GAAGrB,KAAK,CAACsB,UAAN,CAAiBjB,OAAjB,CAAb;EACAgB,IAAI,CAACE,aAAL,CAAmBX,UAAnB;EACAS,IAAI,CAACG,WAAL,CAAiBpB,QAAjB;EACA,OAAOiB,IAAP;AACD,CAzBM"},"metadata":{},"sourceType":"module"}