{"ast":null,"code":"import { b2BodyDef, b2BodyType, b2CircleShape, b2FixtureDef, b2PolygonShape } from \"box2d.ts\";\nexport const createGround = (physicWorld, x, y, width, height) => {\n  const bodyDef = new b2BodyDef();\n  bodyDef.type = b2BodyType.b2_staticBody;\n  bodyDef.position.Set(x, y);\n  const body = physicWorld.CreateBody(bodyDef);\n  const shape = new b2PolygonShape();\n  shape.SetAsBox(width / 2, height / 2, {\n    x: width / 2,\n    y: -height / 2\n  });\n  body.SetUserData(\"ground\");\n  body.CreateFixture(shape);\n  return body;\n};\nexport const createBall = (physicWorld, x, y, radius) => {\n  const bodyDef = new b2BodyDef();\n  bodyDef.type = b2BodyType.b2_staticBody;\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\n  const circle = new b2CircleShape();\n  circle.m_radius = radius;\n  const fixtureDef = new b2FixtureDef();\n  fixtureDef.shape = circle;\n  fixtureDef.restitution = 0.25; // bounce bird\n\n  fixtureDef.friction = 1;\n  fixtureDef.shape = circle;\n  const body = physicWorld.CreateBody(bodyDef);\n  body.CreateFixture(fixtureDef);\n  body.SetUserData(\"ball\");\n  return body;\n};\nexport const createPerson = (physicWorld, x, y, width, height) => {\n  const bodyDef = new b2BodyDef();\n  bodyDef.type = b2BodyType.b2_dynamicBody;\n  bodyDef.position.Set(x + width / 2, y + height / 2);\n  const body = physicWorld.CreateBody(bodyDef);\n  const shape = new b2PolygonShape();\n  shape.SetAsBox(width / 2, height / 2, {\n    x: width / 2,\n    y: -height / 2\n  });\n  body.SetUserData(\"person\");\n  body.CreateFixture(shape);\n  return body;\n};","map":{"version":3,"names":["b2BodyDef","b2BodyType","b2CircleShape","b2FixtureDef","b2PolygonShape","createGround","physicWorld","x","y","width","height","bodyDef","type","b2_staticBody","position","Set","body","CreateBody","shape","SetAsBox","SetUserData","CreateFixture","createBall","radius","circle","m_radius","fixtureDef","restitution","friction","createPerson","b2_dynamicBody"],"sources":["D:/projects/test-game/src/System/utils.ts"],"sourcesContent":["import {\r\n  b2Body,\r\n  b2BodyDef,\r\n  b2BodyType,\r\n  b2CircleShape,\r\n  b2FixtureDef,\r\n  b2PolygonShape,\r\n  b2World,\r\n} from \"box2d.ts\";\r\n\r\nexport const createGround = (\r\n  physicWorld: b2World,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x, y);\r\n  const body = physicWorld.CreateBody(bodyDef);\r\n  const shape = new b2PolygonShape();\r\n  shape.SetAsBox(width / 2, height / 2, { x: width / 2, y: -height / 2 });\r\n  body.SetUserData(\"ground\");\r\n  body.CreateFixture(shape);\r\n  return body;\r\n};\r\n\r\nexport const createBall = (\r\n  physicWorld: b2World,\r\n  x: number,\r\n  y: number,\r\n  radius: number\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\r\n  const circle = new b2CircleShape();\r\n  circle.m_radius = radius;\r\n\r\n  const fixtureDef = new b2FixtureDef();\r\n  fixtureDef.shape = circle;\r\n  fixtureDef.restitution = 0.25; // bounce bird\r\n  fixtureDef.friction = 1;\r\n  fixtureDef.shape = circle;\r\n\r\n  const body = physicWorld.CreateBody(bodyDef);\r\n  body.CreateFixture(fixtureDef);\r\n  body.SetUserData(\"ball\");\r\n  return body;\r\n};\r\n\r\nexport const createPerson = (\r\n  physicWorld: b2World,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_dynamicBody;\r\n  bodyDef.position.Set(x + width / 2, y + height / 2);\r\n  const body = physicWorld.CreateBody(bodyDef);\r\n  const shape = new b2PolygonShape();\r\n  shape.SetAsBox(width / 2, height / 2, { x: width / 2, y: -height / 2 });\r\n  body.SetUserData(\"person\");\r\n  body.CreateFixture(shape);\r\n  return body;\r\n};\r\n"],"mappings":"AAAA,SAEEA,SAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,cANF,QAQO,UARP;AAUA,OAAO,MAAMC,YAAY,GAAG,CAC1BC,WAD0B,EAE1BC,CAF0B,EAG1BC,CAH0B,EAI1BC,KAJ0B,EAK1BC,MAL0B,KAMvB;EACH,MAAMC,OAAO,GAAG,IAAIX,SAAJ,EAAhB;EACAW,OAAO,CAACC,IAAR,GAAeX,UAAU,CAACY,aAA1B;EACAF,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqBR,CAArB,EAAwBC,CAAxB;EACA,MAAMQ,IAAI,GAAGV,WAAW,CAACW,UAAZ,CAAuBN,OAAvB,CAAb;EACA,MAAMO,KAAK,GAAG,IAAId,cAAJ,EAAd;EACAc,KAAK,CAACC,QAAN,CAAeV,KAAK,GAAG,CAAvB,EAA0BC,MAAM,GAAG,CAAnC,EAAsC;IAAEH,CAAC,EAAEE,KAAK,GAAG,CAAb;IAAgBD,CAAC,EAAE,CAACE,MAAD,GAAU;EAA7B,CAAtC;EACAM,IAAI,CAACI,WAAL,CAAiB,QAAjB;EACAJ,IAAI,CAACK,aAAL,CAAmBH,KAAnB;EACA,OAAOF,IAAP;AACD,CAhBM;AAkBP,OAAO,MAAMM,UAAU,GAAG,CACxBhB,WADwB,EAExBC,CAFwB,EAGxBC,CAHwB,EAIxBe,MAJwB,KAKb;EACX,MAAMZ,OAAO,GAAG,IAAIX,SAAJ,EAAhB;EACAW,OAAO,CAACC,IAAR,GAAeX,UAAU,CAACY,aAA1B;EACAF,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqBR,CAAC,GAAGgB,MAAM,GAAG,CAAlC,EAAqCf,CAAC,GAAGe,MAAM,GAAG,CAAlD;EACA,MAAMC,MAAM,GAAG,IAAItB,aAAJ,EAAf;EACAsB,MAAM,CAACC,QAAP,GAAkBF,MAAlB;EAEA,MAAMG,UAAU,GAAG,IAAIvB,YAAJ,EAAnB;EACAuB,UAAU,CAACR,KAAX,GAAmBM,MAAnB;EACAE,UAAU,CAACC,WAAX,GAAyB,IAAzB,CATW,CASoB;;EAC/BD,UAAU,CAACE,QAAX,GAAsB,CAAtB;EACAF,UAAU,CAACR,KAAX,GAAmBM,MAAnB;EAEA,MAAMR,IAAI,GAAGV,WAAW,CAACW,UAAZ,CAAuBN,OAAvB,CAAb;EACAK,IAAI,CAACK,aAAL,CAAmBK,UAAnB;EACAV,IAAI,CAACI,WAAL,CAAiB,MAAjB;EACA,OAAOJ,IAAP;AACD,CAtBM;AAwBP,OAAO,MAAMa,YAAY,GAAG,CAC1BvB,WAD0B,EAE1BC,CAF0B,EAG1BC,CAH0B,EAI1BC,KAJ0B,EAK1BC,MAL0B,KAMf;EACX,MAAMC,OAAO,GAAG,IAAIX,SAAJ,EAAhB;EACAW,OAAO,CAACC,IAAR,GAAeX,UAAU,CAAC6B,cAA1B;EACAnB,OAAO,CAACG,QAAR,CAAiBC,GAAjB,CAAqBR,CAAC,GAAGE,KAAK,GAAG,CAAjC,EAAoCD,CAAC,GAAGE,MAAM,GAAG,CAAjD;EACA,MAAMM,IAAI,GAAGV,WAAW,CAACW,UAAZ,CAAuBN,OAAvB,CAAb;EACA,MAAMO,KAAK,GAAG,IAAId,cAAJ,EAAd;EACAc,KAAK,CAACC,QAAN,CAAeV,KAAK,GAAG,CAAvB,EAA0BC,MAAM,GAAG,CAAnC,EAAsC;IAAEH,CAAC,EAAEE,KAAK,GAAG,CAAb;IAAgBD,CAAC,EAAE,CAACE,MAAD,GAAU;EAA7B,CAAtC;EACAM,IAAI,CAACI,WAAL,CAAiB,QAAjB;EACAJ,IAAI,CAACK,aAAL,CAAmBH,KAAnB;EACA,OAAOF,IAAP;AACD,CAhBM"},"metadata":{},"sourceType":"module"}