[{"D:\\projects\\test-game\\src\\index.ts":"1","D:\\projects\\test-game\\src\\Constant.ts":"2","D:\\projects\\test-game\\src\\GameScreen\\GameScreen.ts":"3","D:\\projects\\test-game\\src\\RenderSystem\\physicDebugSystem.ts":"4","D:\\projects\\test-game\\src\\RenderSystem\\RenderSystem.ts":"5","D:\\projects\\test-game\\src\\System\\utils.ts":"6","D:\\projects\\test-game\\src\\System\\inputHandlerSystem.ts":"7","D:\\projects\\test-game\\src\\System\\TurnOfTeam.ts":"8","D:\\projects\\test-game\\src\\System\\ContactListener.ts":"9"},{"size":1101,"mtime":1665483592580,"results":"10","hashOfConfig":"11"},{"size":269,"mtime":1664853219982,"results":"12","hashOfConfig":"11"},{"size":5253,"mtime":1665483319149,"results":"13","hashOfConfig":"11"},{"size":2810,"mtime":1665482241191,"results":"14","hashOfConfig":"11"},{"size":1835,"mtime":1665479973798,"results":"15","hashOfConfig":"11"},{"size":1767,"mtime":1665392122246,"results":"16","hashOfConfig":"11"},{"size":4708,"mtime":1665479908657,"results":"17","hashOfConfig":"11"},{"size":3196,"mtime":1665484514790,"results":"18","hashOfConfig":"11"},{"size":1909,"mtime":1665490328018,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"1wyhpi",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\test-game\\src\\index.ts",["49"],[],"import {\r\n  AssetManager,\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  Game,\r\n} from \"gdxts\";\r\nimport { Constants } from \"./Constant\";\r\nimport { createGameScreen } from \"./GameScreen/GameScreen\";\r\nimport { StateGame } from \"./dataGame/stateGame\";\r\n\r\nexport const init = async () => {\r\n  const stage = createStage();\r\n  const canvas = stage.getCanvas();\r\n  const viewport = createViewport(\r\n    canvas,\r\n    Constants.WORLD_WIDTH,\r\n    Constants.WORLD_HEIGHT\r\n  );\r\n  const gl = viewport.getContext();\r\n\r\n  const assetManager = new AssetManager(gl);\r\n  await assetManager.loadTexture(\"./bloodBar.png\", \"bloodBar\");\r\n  await assetManager.loadTexture(\"./vsAsset.png\", \"vsAsset\");\r\n  await assetManager.loadTexture(\"./winningAsset.png\", \"winningAsset\");\r\n\r\n  Game.shared.setScreen(await createGameScreen(assetManager, viewport));\r\n  window.addEventListener(\"keydown\", async (e) => {\r\n    if (e.key === \" \") {\r\n      Game.shared.setScreen(await createGameScreen(assetManager, viewport));\r\n    }\r\n  });\r\n  createGameLoop((delta: number) => {\r\n    Game.shared.update(delta);\r\n  });\r\n};\r\ninit();\r\n","D:\\projects\\test-game\\src\\Constant.ts",[],[],"D:\\projects\\test-game\\src\\GameScreen\\GameScreen.ts",[],[],"D:\\projects\\test-game\\src\\RenderSystem\\physicDebugSystem.ts",[],[],"D:\\projects\\test-game\\src\\RenderSystem\\RenderSystem.ts",[],[],"D:\\projects\\test-game\\src\\System\\utils.ts",["50"],[],"import {\r\n  b2Body,\r\n  b2BodyDef,\r\n  b2BodyType,\r\n  b2CircleShape,\r\n  b2FixtureDef,\r\n  b2PolygonShape,\r\n  b2Transform,\r\n  b2World,\r\n} from \"box2d.ts\";\r\n\r\nexport const createGround = (\r\n  physicWorld: b2World,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x, y);\r\n  const body = physicWorld.CreateBody(bodyDef);\r\n  const shape = new b2PolygonShape();\r\n  shape.SetAsBox(width / 2, height / 2, { x: width / 2, y: -height / 2 });\r\n  body.SetUserData(\"ground\");\r\n  body.CreateFixture(shape);\r\n  return body;\r\n};\r\n\r\nexport const createBall = (\r\n  physicWorld: b2World,\r\n  x: number,\r\n  y: number,\r\n  radius: number\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_staticBody;\r\n  bodyDef.position.Set(x + radius / 2, y + radius / 2);\r\n  const circle = new b2CircleShape();\r\n  circle.m_radius = radius;\r\n  const fixtureDef = new b2FixtureDef();\r\n  fixtureDef.shape = circle;\r\n\r\n  const body = physicWorld.CreateBody(bodyDef);\r\n  body.CreateFixture(fixtureDef);\r\n  body.SetUserData(\"ball\");\r\n  return body;\r\n};\r\n\r\nexport const createPerson = (\r\n  physicWorld: b2World,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  userData: { name: \"Person\" }\r\n): b2Body => {\r\n  const bodyDef = new b2BodyDef();\r\n  bodyDef.type = b2BodyType.b2_dynamicBody;\r\n  bodyDef.position.Set(x + width / 2, y + height / 2);\r\n  const body = physicWorld.CreateBody(bodyDef);\r\n  const shape = new b2PolygonShape();\r\n  shape.SetAsBox(width / 2, height / 2, { x: width / 2, y: -height / 2 });\r\n  body.SetUserData({\r\n    name: userData.name,\r\n    durability: 0,\r\n  });\r\n\r\n  body.CreateFixture(shape);\r\n  return body;\r\n};\r\n","D:\\projects\\test-game\\src\\System\\inputHandlerSystem.ts",[],[],"D:\\projects\\test-game\\src\\System\\TurnOfTeam.ts",[],[],"D:\\projects\\test-game\\src\\System\\ContactListener.ts",[],[],{"ruleId":"51","severity":1,"message":"52","line":10,"column":10,"nodeType":"53","messageId":"54","endLine":10,"endColumn":19},{"ruleId":"51","severity":1,"message":"55","line":8,"column":3,"nodeType":"53","messageId":"54","endLine":8,"endColumn":14},"@typescript-eslint/no-unused-vars","'StateGame' is defined but never used.","Identifier","unusedVar","'b2Transform' is defined but never used."]